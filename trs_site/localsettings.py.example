#!/usr/bin/env python
# -*- coding: UTF-8 -*-
from __future__ import unicode_literals

import datetime
import os
import os.path

# PROJECT_DIR: This should be an absolute path to the root of this Django
# project. Do not change this.
PROJECT_DIR = os.path.join(os.path.dirname(__file__), os.pardir)

# DEBUG: This causes Django bring up a detailed report on uncaught exceptions.
# Set to False to protect your site.
DEBUG = True

# ADMINS: Important diagnostics emails will be sent to emails defined here.
ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# Following specifies how smtplib sends emails, provided the email backend is
# set to 'django.core.mail.backends.smtp.EmailBackend'.
EMAIL_HOST = 'smtp.example.com'
EMAIL_PORT = 465  # default for SMTP with TLS
EMAIL_HOST_USER = 'user@example.com'
EMAIL_HOST_PASSWORD = 'secretSMTPpassword'
EMAIL_USE_TLS = True

# As an alternative to sending emails (if it is not convenient for you to use
# SMTP), you can have them written to logs. You will have to remember to read
# them yourself, though.
#
# If this is what you want, uncomment the following two lines and set the
# second one to a more reasonable place (and writable by the web server).
# EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
# EMAIL_FILE_PATH = '/tmp/app-messages' # change this to a proper location


# DOMAIN_URL: This is the beginning of the URL where your application will be
# accessible.
DOMAIN_URL = "http://example.com"

# APP_PORT: If a port needs to be specified in the URL to reach your app,
# specify the port as a string here.
APP_PORT = '8000'

# APP_PATH: The path part of the app URL (after the domain and port).
APP_PATH = '/apps/transcription'

# COOKIES_MAX_AGE: This determines how long we will be able to recognise
# a transcriber is the same transcriber we saw last time. Specify as a number
# of seconds.
COOKIES_MAX_AGE = 366 * 24 * 3600

# PYLIBS_DIR: Some auxiliary Python modules are made available under this path
# by default.  You should have gotten them as part of the git clone.   Unless
# you have a reason, leave this setting as is.
PYLIBS_DIR = PROJECT_DIR + "/libs/python"

# DJANGO_PATH: If you have multiple django installations, set the path to
# Django v1.4 to this variable.
DJANGO_PATH = '/webapps/libs/django-1.4.1/django'

# Make this unique, and don't share it with anybody. It can be an arbitrary
# string; the longer, the better safety of any data transmitted.
SECRET_KEY = ('t\001\016=\272k\305\036\303:\357\220[IY\001\3256p\254\276u]\277'
              '\355pN\Zn+0\207\306\315M\227i\241\251n\347\206\367Q\221\252Y'
              '\215\257\267\333\^e\370\202\0064\252"\3711\272\275\001\233\350d'
              '1\2323\273br\3169!\347{\\036/$\304\330\356?o\000\366\342\226O9('
              '\266\177qf\020\021z')

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'Europe/Prague'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-gb'

# EXPORT_DIR: Path towards the directory where annotated XML logs will be
# exported using the admin Export Annotations action.
EXPORT_DIR = PROJECT_DIR + "/data/export"

# CONVERSATION_DIR: Path towards the directory where dialogue log directories
# are put and reside.
CONVERSATION_DIR = PROJECT_DIR + "/data/conversations"

# LISTS_DIR: Path towards a directory where lists of dialogue dirs to import
# will be looked for. This does not influence the scripts/fetch_dgdir.sh script
# which uses (PROJECT_DIR + "/data/lists") anyway.
LISTS_DIR = PROJECT_DIR + "/data/lists"
SESSION_FNAME = 'session-fixed.xml'
SESSION_FNAMES = ('session-fixed.xml', 'session.xml')
# alternatives, tried from the first (up to the last if the previous did not
# exist)

USE_CF = True        # use Crowdflower?
USE_WEBHOOKS = True  # set webhooks on Crowdflower? (used for tracking worker
                     # IDs and their gold hit ratios)
                     # This requires DOMAIN_URL to be a public URL (not
                     # http://localhost or similar).
WORKLOGS_DIR = PROJECT_DIR + "/log/work_logs"
CURLLOGS_DIR = PROJECT_DIR + "/log/curl_logs"
LOG_CURL = False

CODE_LENGTH = 6  # length of the validation code
CODE_LENGTH_EXT = 3  # length of the validation code extension

# CF_KEY: API key to your Crowdflower account.
CF_KEY = "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd"

# CF_WAIT_SECS: How long to give Crowdflower before asking it about newly
# uploaded jobs.
CF_WAIT_SECS = 1

# CF_MAX_WAITS: How many times in a row maximum we wish to wait for Crowdflower
# to update its data before concluding something went irretrievably wrong.
CF_MAX_WAITS = 41

# PRICE_CONTS, PRICE_PER_MIN, PRICE_PER_TURN: Coefficients that determine the
# price for a dialogue. Its duration is determined from the size of the audio
# file, user turns and only those are used with the PRICE_PER_TURN coefficient.
PRICE_CONST = 2 * 0.01
PRICE_PER_MIN = 30 * 0.01
PRICE_PER_TURN = 0.5 * 0.01

# MIN_TURNS: Minimum number of user turns in a dialogue to not ignore it when
# importing dialogues.
MIN_TURNS = 2

# MAX_ANNOTATIONS_PER_INPUT: When a transcriber asks for a random dialogue to
# annotate, only dialogues that have less than this many annotations so far may
# be shown to him.
MAX_ANNOTATIONS_PER_INPUT = 1

# SESSION_EXPIRED: For how long to reserve a dialogue for a single annotator
# (who started to work on it).
SESSION_EXPIRED = datetime.timedelta(hours=12)

# maximum tolerated character error rate in transcriptions (after
# normalisation)
#
# The value 0.15 implies that one in 6--7 characters being wrong shall be
# tolerated and seems to be a good choice.
MAX_CHAR_ER = 0.15

# What all information about a finalized job should be stored in the XML
# session file?
#
# Format: [ (Crowdflower JSON key, target XML attribute) ]
LOGGED_JOB_DATA = [
#     ("webhook_sent_at", "webhook_sent_at"),
#     ("city", "city"),
#     ("region", "region"),
#     ("created_at", "created_at"),
#     ("unit_id", "unit_id"),
#     ("unit_state", "unit_state"),
    ("country", "country"),
    ("worker_trust", "worker_trust"),
#     ("judgment", "judgment"),
#     ("tainted", "tainted"),
#     ("trust", "trust"),
#     ("id", "cf_id"),
    ("external_type", "channel"),
#     ("reviewed", "reviewed"),
#     ("worker_id", "worker_id"),  # This is always logged.
#     ("missed", "missed"),
#     ("started_at", "started_at"),
#     ("golden", "golden"),
#     ("job_id", "job_id"),
#     ("rejected", "rejected"),
]

# EXTRA_QUESTIONS: subset of these example strings. Determines what additional
# questions should be asked in the transcription form.
EXTRA_QUESTIONS = ('accent', 'quality', 'offensive', 'info_provided')

# USE_ACCORDION: whether to uncover individual turns in the transcription
# interface gradually, after the audio finished playing.
USE_ACCORDION = True

# TASKS: if it contains 'asr', transcriptions are done; if it contains 'slu',
# semantic annotations are done. It may contain one or both.
TASKS = ('asr', 'slu')

# XML_COMMON: Partial description of the XML logs format, common to all (both)
# formats accepted.
XML_COMMON = {
    'ANNOTATIONS_ABOVE': ".",
    'ANNOTATIONS_AFTER': "turn",  # This has to point to a direct child of
                                  # ANNOTATIONS_ABOVE.
    'ANNOTATIONS_ELEM': "annotations",
    'ANNOTATION_ELEM': "annotation",
    'REC_SUBPATH': "rec",
    'REC_FNAME_ATTR': "fname"
}

# XML_COMMON: Partial description of the XML logs format, distinguished by the
# root element of the logs into different settings.
XML_SCHEMES = {
    'dialog': {
        'USERTURN_PATH': ".//userturn",
        'SYSTURN_PATH': ".//systurn",
        'TURNNUMBER_ATTR': "turnnum",
        'SYSTEXT_SUBPATH': "prompt",
        'ASRHYPS_ELEM': 'asr',
        'ASRHYP_ELEM': 'asrhyp',
        'SLUHYPS_ELEM': 'semi',
        'SLUHYP_ELEM': 'semihyp',
        'PROB_ATTR': 'prob',
        'TRANSCRIPTIONS_BEFORE': "asr",
        'TRANSCRIPTIONS_ELEM': "transcriptions",
        'TRANSCRIPTION_BEFORE': None,
        'TRANSCRIPTION_ELEM': "transcription",
        'ANNOTATIONS_BEFORE': "transcriptions",
        'ANNOTATIONS_ELEM': "slu_annotations",
        'ANNOTATION_BEFORE': None,
        'ANNOTATION_ELEM': "slu_annotation",
        'AUTHOR_ATTR': "author",
        'DATE_ATTR': "date_updated",
        'DATE_FORMAT': None
    },
    'dialogue': {
        'USERTURN_PATH': ".//turn[@speaker='user']",
        'SYSTURN_PATH': ".//turn[@speaker='system']",
        'TURNNUMBER_ATTR': "turn_number",
        'SYSTEXT_SUBPATH': "text",
        'ASRHYPS_ELEM': 'asr',
        'ASRHYP_ELEM': 'hypothesis',
        'SLUHYPS_ELEM': 'slu',
        'SLUHYP_ELEM': 'interpretation',
        'PROB_ATTR': 'p',
        'TRANSCRIPTIONS_BEFORE': None,
        'TRANSCRIPTIONS_ELEM': None,
        'TRANSCRIPTION_BEFORE': "slu",
        'TRANSCRIPTION_ELEM': "asr_transcription",
        'ANNOTATIONS_BEFORE': None,
        'ANNOTATIONS_ELEM': None,
        'ANNOTATION_BEFORE': "asr_transcription",
        'ANNOTATION_ELEM': "slu_transcription",
        'AUTHOR_ATTR': "transcriber",
        'DATE_ATTR': "date",
# NOTE: including timezone info into the datetime format could disable
# finding the transcription in its XML if the timezone setting changes
        'DATE_FORMAT': "%d/%m/%y, %H:%M:%S %Z"
    }
}

# TRANSCRIBE_EXTRA_CONTEXT: This is currently used only to specify path to
# templates that comprise the instructions.
TRANSCRIBE_EXTRA_CONTEXT = {
    'instruction_includes': ('trs/numerals.html',
                             'trs/ortography.html',
                             'trs/incomplete_words.html',
                             'trs/nonspeech_sounds.html',
                             # 'trs/censoring.html',
                             'trs/localnames-cir.html',
                             'trs/donotspam.html',
                             )
}

# INTROS: A collection of dialogue-introductory strings that should be stripped
# from the first system prompt if it starts with any of them.
INTROS = ()

# IGNORE_PROMPT_STARTS: A collection of strings, such that system prompts that
# start in these strings are not shown to the transcriber at all.
IGNORE_PROMPT_STARTS = ("Thank you for using", "Thank you goodbye")


###########################################
# sem_transcription-specific from here on #
###########################################
# TODO To uppercase.
nullary_dat = ['repeat', 'restart', 'null', 'other', 'thankyou', 'bye']
unary_dat_with_slot = ['pokus']
unary_dat_with_value = ['inform', 'experimentalni']
binary_dat = ['inform']
name_of_slot = ['from_stop', 'to_stop']

def dai2text(value):
    return "TEXT"
